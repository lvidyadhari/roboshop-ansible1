- name: user
  hosts: user
  become: yes
  tasks:
  - name: disable and enable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.dnf:
     name: nodejs
     state: present

  - name: create user roboshop
    ansible.builtin.user:
     name: roboshop

  - name: recursively remove app directory
    ansible.builtin.file:
     path: /app
     state: absent

  - name: create app directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download user application
    ansible.builtin.get_url:
     dest: /tmp
     url: https://roboshop-builds.s3.amazonaws.com/user.zip

  - name: extract user application
    ansible.builtin.unarchive:
     src: /tmp/user.zip
     dest: /app
     remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: Copy user.service
    ansible.builtin.copy:
     src: user.service
     dest: /etc/systemd/system/user.service

  - name: daemon reload and start
    ansible.builtin.systemd_service:
     daemon_reload: true

  - name: start and enable user
    ansible.builtin.service:
     name: user
     state: restarted
     enabled: yes

  - name: copy mongodb repo
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongodb.repo

  - name: install mongodb client
    ansible.builtin.package:
     name: mongodb-org-shell
     state: present
  
  - name: get the users count
    ansible.builtin.command: mongo --host mongodb.daws76s.store --quiet --eval 'db = db.getSiblingsDB("users"); db.users.count()'
    register: user_count

  - name: load user data
    ansible.builtin.command: mongo --host mongodb.daws76s.store < /app/schema/user.js
    when: user_count.stdout == "0"

  - name: start and enable user
    ansible.builtin.service:
     name: user
     state: restarted
     enabled: yes
